<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | CodingDead]]></title>
  <link href="http://codingdead.com/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://codingdead.com/"/>
  <updated>2012-08-20T21:40:44+03:00</updated>
  <id>http://codingdead.com/</id>
  <author>
    <name><![CDATA[Vlad Shvedov / Коллективный блог]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Отображение прогресса в терминале]]></title>
    <link href="http://codingdead.com/blog/2012/08/17/otobrazhieniie-proghriessa-v-tierminalie/"/>
    <updated>2012-08-17T18:07:00+03:00</updated>
    <id>http://codingdead.com/blog/2012/08/17/otobrazhieniie-proghriessa-v-tierminalie</id>
    <content type="html"><![CDATA[<p>Зачастую, отображение прогресса работы терминального приложения на Ruby это не столько дань уважения к конечному пользователю, сколько единственная возможность оповестить человека по ту сторону экрана о том, что скрипт не завис и продолжает работать. Простейший вариант отображения текущего состояния может выглядеть так:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">1</span><span class="o">.</span><span class="n">upto</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\r</span><span class="s2">Zombies killed (in percents): %d%&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">sleep</span><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Весь секрет в использовании escape-символа '\r' (0x0d) — возврат каретки в операторе printf. Вот еще один пример похожий на прогресс-бар из wget:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">0</span><span class="o">.</span><span class="n">step</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\r</span><span class="s2">Loading shotgun: [%-20s]&quot;</span><span class="p">,</span> <span class="s2">&quot;=&quot;</span> <span class="o">*</span> <span class="p">(</span><span class="n">i</span><span class="o">/</span><span class="mi">5</span><span class="p">))</span>
</span><span class='line'>  <span class="nb">sleep</span><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>И еще один, для любителей перфекционизма:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">spinner</span> <span class="o">=</span> <span class="no">Enumerator</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
</span><span class='line'>  <span class="kp">loop</span> <span class="k">do</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;e.yield &#39;|&#39;</span>
</span><span class='line'><span class="sr">e.yield &#39;/</span><span class="s1">&#39;</span>
</span><span class='line'><span class="s1">e.yield &#39;</span><span class="o">-</span><span class="s1">&#39;</span>
</span><span class='line'><span class="s1">e.yield &#39;</span><span class="p">\\</span><span class="err">&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;1.upto(100) do |i|</span>
</span><span class='line'><span class="sr">  progress = &quot;=&quot; * (i/</span><span class="mi">5</span><span class="p">)</span> <span class="k">unless</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">5</span>
</span><span class='line'>  <span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\r</span><span class="s2">Eating brains: [%-20s] %d%% %s&quot;</span><span class="p">,</span> <span class="n">progress</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">spinner</span><span class="o">.</span><span class="n">next</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">sleep</span><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
